# Sets up the official HashiCorp package repository and installs Consul using apt package manager.

wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update && sudo apt install consul



example:
http://your-host:8500

# Checks the location of the Consul binary.
which consul



# Opens the necessary ports in the firewall for Consul.

sudo ufw allow 8500/tcp
sudo ufw allow 8301/tcp
sudo ufw reload
sudo ufw status verbose


### 
# Starts the Consul agent in development mode, which is an in-memory server mode with some common features enabled for ease of use.

consul agent -dev

# Opens a new console and displays information about the Consul agent, including its IP address, health state, role in the datacenter, and version information.

consul members

# Displays information about the Consul agents in the cluster, including their IP addresses, health state, role in the datacenter, and version information.

consul members --detailed

# Provides more detailed metadata about the Consul agents in the cluster.

curl localhost:8500/v1/catalog/nodes

# Queries the Consul HTTP API to retrieve information about the registered nodes in the catalog.

consul leave

# Initiates a graceful leave of the Consul cluster, allowing the agent to gracefully exit and remove itself from the cluster.

mkdir /etc/consul.d
nano /etc/consul.d/web.json

# Creates a directory for Consul configuration files and opens the "web.json" file for editing using the nano text editor.

{
  "service": {
    "name": "G7-web",
    "tags": ["frontend"],
    "port": 80
  }
}

# Defines a Consul service configuration for a web service with the name "G7-web", tags "frontend", and listening on port 80.

consul agent -dev -enable-script-checks -config-dir=/etc/consul.d

# Starts the Consul agent in development mode with script checks enabled and reads configuration files from the "/etc/consul.d" directory.

curl localhost:8500/v1/catalog/services

# Queries the Consul HTTP API to retrieve a list of available services in the catalog.

curl http://localhost:8500/v1/catalog/service/web

# Retrieves detailed information about the "web" service from the Consul catalog.

curl 'http://localhost:8500/v1/health/service/web?passing'

# Queries the Consul HTTP API to retrieve health checks for the "web" service that are passing.

### homework
dig @127.0.0.1 -p 8600 web.service.consul

# Performs a DNS lookup for the "web.service.consul" service using the Consul DNS server running on localhost.

dig @127.0.0.1 -p 8600 web.service.consul SRV

# Performs a DNS SRV lookup for the "web.service.consul" service using the Consul DNS server running on localhost.

Service Health Check

sudo nano /etc/consul.d/web.json

# Opens the "web.json" configuration file for editing using the nano text editor with superuser privileges.

{
  "service": {
    "name": "web",
    "tags": ["frontend"],
    "port": 80,
    "check": {
      "args": ["curl", "localhost"],
      "interval": "10s"
    }
  }
}

# Adds a Consul service configuration for a Jenkins server with the specified address, port, and HTTP health check.

consul reload

# Reloads the Consul agent's configuration to apply any changes made to the configuration files.

# make autostart
sudo nano /etc/systemd/system/consul.service

[Unit]
Description=Consul
Documentation=https://www.consul.io/
Requires=network-online.target
After=network-online.target

[Service]
User=<username>  # Replace <username> with the username of the user running Consul
Group=<group>    # Replace <group> with the group of the user running Consul
ExecStart=/usr/bin/consul agent -dev -enable-script-checks -config-dir=/etc/consul.d
ExecReload=/usr/bin/consul reload
KillMode=process
Restart=on-failure
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target

sudo systemctl enable consul.service
sudo systemctl start consul.service
sudo systemctl status consul.service




